{
    "openapi": "3.0.0",
    "servers": [
        {
            "url": "https://worklink.amazonaws.com/"
        },
        {
            "url": "http://worklink.amazonaws.com/"
        }
    ],
    "info": {
        "contact": {
            "email": "mike.ralphson@gmail.com",
            "name": "Mike Ralphson",
            "url": "https://github.com/mermade/aws2openapi",
            "x-twitter": "PermittedSoc"
        },
        "description": "Amazon WorkLink is a cloud-based service that provides secure access to internal websites and web apps from iOS phones. In a single step, your users, such as employees, can access internal websites as efficiently as they access any other public website. They enter a URL in their web browser, or choose a link to an internal website in an email. Amazon WorkLink authenticates the user's access and securely renders authorized internal web content in a secure rendering service in the AWS cloud. Amazon WorkLink doesn't download or store any internal web content on mobile devices.",
        "license": {
            "name": "Apache 2.0 License",
            "url": "http://www.apache.org/licenses/"
        },
        "termsOfService": "https://aws.amazon.com/service-terms/",
        "title": "Amazon WorkLink",
        "version": "2018-09-25",
        "x-apiClientRegistration": {
            "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
        },
        "x-apisguru-categories": [
            "cloud"
        ],
        "x-logo": {
            "backgroundColor": "#FFFFFF",
            "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.jpeg"
        },
        "x-origin": [
            {
                "contentType": "application/json",
                "converter": {
                    "url": "https://github.com/mermade/aws2openapi",
                    "version": "1.0.0"
                },
                "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/worklink-2018-09-25.normal.json",
                "x-apisguru-direct": true
            }
        ],
        "x-preferred": true,
        "x-providerName": "amazonaws.com",
        "x-release": "v4",
        "x-serviceName": "worklink"
    },
    "externalDocs": {
        "description": "Amazon Web Services documentation",
        "url": "https://docs.aws.amazon.com/worklink/"
    },
    "security": [
        {
            "hmac": []
        }
    ],
    "paths": {
        "/UpdateFleetMetadata": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Updates fleet metadata, such as DisplayName.",
                "operationId": "UpdateFleetMetadata",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "UnauthorizedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "TooManyRequestsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "DisplayName": {
                                        "description": "The fleet name to display. The existing DisplayName is unset if null is passed.",
                                        "maxLength": 100,
                                        "type": "string"
                                    },
                                    "FleetArn": {
                                        "description": "The ARN of the fleet.",
                                        "maxLength": 2048,
                                        "minLength": 20,
                                        "type": "string"
                                    },
                                    "OptimizeForEndUserLocation": {
                                        "description": "The option to optimize for better performance by routing traffic through the closest AWS Region to users, which may be outside of your home Region.",
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "FleetArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/associateWebsiteCertificateAuthority": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Imports the root certificate of a certificate authority (CA) used to obtain TLS certificates used by associated websites within the company network.",
                "operationId": "AssociateWebsiteCertificateAuthority",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "WebsiteCaId": {
                                            "description": "A unique identifier for the CA.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "UnauthorizedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ResourceAlreadyExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "TooManyRequestsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Certificate": {
                                        "description": "The root certificate of the CA.",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "pattern": "-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}(\\u000D?\\u000A)?",
                                        "type": "string"
                                    },
                                    "DisplayName": {
                                        "description": "The certificate name to display.",
                                        "maxLength": 100,
                                        "type": "string"
                                    },
                                    "FleetArn": {
                                        "description": "The ARN of the fleet.",
                                        "maxLength": 2048,
                                        "minLength": 20,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "FleetArn",
                                    "Certificate"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/createFleet": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Creates a fleet. A fleet consists of resources and the configuration that delivers associated websites to authorized users who download and set up the Amazon WorkLink app.",
                "operationId": "CreateFleet",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "FleetArn": {
                                            "description": "The ARN of the fleet.",
                                            "maxLength": 2048,
                                            "minLength": 20,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "UnauthorizedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ResourceAlreadyExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "TooManyRequestsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "DisplayName": {
                                        "description": "The fleet name to display.",
                                        "maxLength": 100,
                                        "type": "string"
                                    },
                                    "FleetName": {
                                        "description": "A unique name for the fleet.",
                                        "maxLength": 48,
                                        "minLength": 1,
                                        "pattern": "^[a-z0-9](?:[a-z0-9\\-]{0,46}[a-z0-9])?$",
                                        "type": "string"
                                    },
                                    "OptimizeForEndUserLocation": {
                                        "description": "The option to optimize for better performance by routing traffic through the closest AWS Region to users, which may be outside of your home Region.",
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "FleetName"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/deleteFleet": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Deletes a fleet. Prevents users from accessing previously associated websites. ",
                "operationId": "DeleteFleet",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "UnauthorizedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "TooManyRequestsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "FleetArn": {
                                        "description": "The ARN of the fleet.",
                                        "maxLength": 2048,
                                        "minLength": 20,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "FleetArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/describeAuditStreamConfiguration": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Describes the configuration for delivering audit streams to the customer account.",
                "operationId": "DescribeAuditStreamConfiguration",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "AuditStreamArn": {
                                            "description": "The ARN of the Amazon Kinesis data stream that will receive the audit events.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "UnauthorizedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "TooManyRequestsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "FleetArn": {
                                        "description": "The ARN of the fleet.",
                                        "maxLength": 2048,
                                        "minLength": 20,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "FleetArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/describeCompanyNetworkConfiguration": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Describes the networking configuration to access the internal websites associated with the specified fleet.",
                "operationId": "DescribeCompanyNetworkConfiguration",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "SecurityGroupIds": {
                                            "description": "The security groups associated with access to the provided subnets.",
                                            "items": {
                                                "pattern": "^sg-([0-9a-f]{8}|[0-9a-f]{17})$",
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "SubnetIds": {
                                            "description": "The subnets used for X-ENI connections from Amazon WorkLink rendering containers.",
                                            "items": {
                                                "pattern": "^subnet-([0-9a-f]{8}|[0-9a-f]{17})$",
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "VpcId": {
                                            "description": "The VPC with connectivity to associated websites.",
                                            "pattern": "^vpc-([0-9a-f]{8}|[0-9a-f]{17})$",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "UnauthorizedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "TooManyRequestsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "FleetArn": {
                                        "description": "The ARN of the fleet.",
                                        "maxLength": 2048,
                                        "minLength": 20,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "FleetArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/describeDevice": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Provides information about a user's device.",
                "operationId": "DescribeDevice",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "FirstAccessedTime": {
                                            "description": "The date that the device first signed in to Amazon WorkLink.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "LastAccessedTime": {
                                            "description": "The date that the device last accessed Amazon WorkLink.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Manufacturer": {
                                            "description": "The manufacturer of the device.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "Model": {
                                            "description": "The model of the device.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "OperatingSystem": {
                                            "description": "The operating system of the device.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "OperatingSystemVersion": {
                                            "description": "The operating system version of the device.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "PatchLevel": {
                                            "description": "The operating system patch level of the device.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The current state of the device.",
                                            "enum": [
                                                "ACTIVE",
                                                "SIGNED_OUT"
                                            ],
                                            "type": "string"
                                        },
                                        "Username": {
                                            "description": "The user name associated with the device.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "UnauthorizedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "TooManyRequestsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "DeviceId": {
                                        "description": "A unique identifier for a registered user's device.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "FleetArn": {
                                        "description": "The ARN of the fleet.",
                                        "maxLength": 2048,
                                        "minLength": 20,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "FleetArn",
                                    "DeviceId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/describeDevicePolicyConfiguration": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Describes the device policy configuration for the specified fleet.",
                "operationId": "DescribeDevicePolicyConfiguration",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeviceCaCertificate": {
                                            "description": "The certificate chain, including intermediate certificates and the root certificate authority certificate used to issue device certificates.",
                                            "maxLength": 8192,
                                            "minLength": 1,
                                            "pattern": "-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}(\\u000D?\\u000A)?",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "UnauthorizedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "TooManyRequestsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "FleetArn": {
                                        "description": "The ARN of the fleet.",
                                        "maxLength": 2048,
                                        "minLength": 20,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "FleetArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/describeFleetMetadata": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Provides basic information for the specified fleet, excluding identity provider, networking, and device configuration details.",
                "operationId": "DescribeFleetMetadata",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "CompanyCode": {
                                            "description": "The identifier used by users to sign in to the Amazon WorkLink app.",
                                            "maxLength": 32,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "CreatedTime": {
                                            "description": "The time that the fleet was created.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "DisplayName": {
                                            "description": "The name to display.",
                                            "maxLength": 100,
                                            "type": "string"
                                        },
                                        "FleetName": {
                                            "description": "The name of the fleet.",
                                            "maxLength": 48,
                                            "minLength": 1,
                                            "pattern": "^[a-z0-9](?:[a-z0-9\\-]{0,46}[a-z0-9])?$",
                                            "type": "string"
                                        },
                                        "FleetStatus": {
                                            "description": "The current state of the fleet.",
                                            "enum": [
                                                "CREATING",
                                                "ACTIVE",
                                                "DELETING",
                                                "DELETED",
                                                "FAILED_TO_CREATE",
                                                "FAILED_TO_DELETE"
                                            ],
                                            "type": "string"
                                        },
                                        "LastUpdatedTime": {
                                            "description": "The time that the fleet was last updated.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "OptimizeForEndUserLocation": {
                                            "description": "The option to optimize for better performance by routing traffic through the closest AWS Region to users, which may be outside of your home Region.",
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "UnauthorizedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "TooManyRequestsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "FleetArn": {
                                        "description": "The ARN of the fleet.",
                                        "maxLength": 2048,
                                        "minLength": 20,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "FleetArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/describeIdentityProviderConfiguration": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Describes the identity provider configuration of the specified fleet.",
                "operationId": "DescribeIdentityProviderConfiguration",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "IdentityProviderSamlMetadata": {
                                            "description": "The SAML metadata document provided by the user’s identity provider.",
                                            "maxLength": 204800,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "IdentityProviderType": {
                                            "description": "The type of identity provider.",
                                            "enum": [
                                                "SAML"
                                            ],
                                            "type": "string"
                                        },
                                        "ServiceProviderSamlMetadata": {
                                            "description": "The SAML metadata document uploaded to the user’s identity provider.",
                                            "maxLength": 204800,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "UnauthorizedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "TooManyRequestsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "FleetArn": {
                                        "description": "The ARN of the fleet.",
                                        "maxLength": 2048,
                                        "minLength": 20,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "FleetArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/describeWebsiteCertificateAuthority": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Provides information about the certificate authority.",
                "operationId": "DescribeWebsiteCertificateAuthority",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Certificate": {
                                            "description": "The root certificate of the certificate authority.",
                                            "maxLength": 8192,
                                            "minLength": 1,
                                            "pattern": "-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}(\\u000D?\\u000A)?",
                                            "type": "string"
                                        },
                                        "CreatedTime": {
                                            "description": "The time that the certificate authority was added.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "DisplayName": {
                                            "description": "The certificate name to display.",
                                            "maxLength": 100,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "UnauthorizedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "TooManyRequestsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "FleetArn": {
                                        "description": "The ARN of the fleet.",
                                        "maxLength": 2048,
                                        "minLength": 20,
                                        "type": "string"
                                    },
                                    "WebsiteCaId": {
                                        "description": "A unique identifier for the certificate authority.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "FleetArn",
                                    "WebsiteCaId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/disassociateWebsiteCertificateAuthority": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Removes a certificate authority (CA).",
                "operationId": "DisassociateWebsiteCertificateAuthority",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "UnauthorizedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "TooManyRequestsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "FleetArn": {
                                        "description": "The ARN of the fleet.",
                                        "maxLength": 2048,
                                        "minLength": 20,
                                        "type": "string"
                                    },
                                    "WebsiteCaId": {
                                        "description": "A unique identifier for the CA.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "FleetArn",
                                    "WebsiteCaId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/listDevices": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Retrieves a list of devices registered with the specified fleet.",
                "operationId": "ListDevices",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "NextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Devices": {
                                            "description": "Information about the devices.",
                                            "items": {
                                                "description": "The summary of devices.",
                                                "properties": {
                                                    "DeviceId": {
                                                        "description": "The ID of the device.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "DeviceStatus": {
                                                        "description": "The status of the device.",
                                                        "enum": [
                                                            "ACTIVE",
                                                            "SIGNED_OUT"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "NextToken": {
                                            "description": "The pagination token used to retrieve the next page of results for this operation. If there are no more pages, this value is null.",
                                            "maxLength": 4096,
                                            "minLength": 1,
                                            "pattern": "[\\w\\-]+",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "UnauthorizedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "TooManyRequestsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "FleetArn": {
                                        "description": "The ARN of the fleet.",
                                        "maxLength": 2048,
                                        "minLength": 20,
                                        "type": "string"
                                    },
                                    "MaxResults": {
                                        "description": "The maximum number of results to be included in the next page.",
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "The pagination token used to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.",
                                        "maxLength": 4096,
                                        "minLength": 1,
                                        "pattern": "[\\w\\-]+",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "FleetArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/listFleets": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Retrieves a list of fleets for the current account and Region.",
                "operationId": "ListFleets",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "NextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "FleetSummaryList": {
                                            "description": "The summary list of the fleets.",
                                            "items": {
                                                "description": "The summary of the fleet.",
                                                "properties": {
                                                    "CompanyCode": {
                                                        "description": "The identifier used by users to sign into the Amazon WorkLink app.",
                                                        "maxLength": 32,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "CreatedTime": {
                                                        "description": "The time when the fleet was created.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "DisplayName": {
                                                        "description": "The name to display.",
                                                        "maxLength": 100,
                                                        "type": "string"
                                                    },
                                                    "FleetArn": {
                                                        "description": "The ARN of the fleet.",
                                                        "maxLength": 2048,
                                                        "minLength": 20,
                                                        "type": "string"
                                                    },
                                                    "FleetName": {
                                                        "description": "The name of the fleet.",
                                                        "maxLength": 48,
                                                        "minLength": 1,
                                                        "pattern": "^[a-z0-9](?:[a-z0-9\\-]{0,46}[a-z0-9])?$",
                                                        "type": "string"
                                                    },
                                                    "FleetStatus": {
                                                        "description": "The status of the fleet.",
                                                        "enum": [
                                                            "CREATING",
                                                            "ACTIVE",
                                                            "DELETING",
                                                            "DELETED",
                                                            "FAILED_TO_CREATE",
                                                            "FAILED_TO_DELETE"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "LastUpdatedTime": {
                                                        "description": "The time when the fleet was last updated.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "NextToken": {
                                            "description": "The pagination token used to retrieve the next page of results for this operation. If there are no more pages, this value is null.",
                                            "maxLength": 4096,
                                            "minLength": 1,
                                            "pattern": "[\\w\\-]+",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "UnauthorizedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "TooManyRequestsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "MaxResults": {
                                        "description": "The maximum number of results to be included in the next page.",
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "The pagination token used to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.",
                                        "maxLength": 4096,
                                        "minLength": 1,
                                        "pattern": "[\\w\\-]+",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/listWebsiteCertificateAuthorities": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Retrieves a list of certificate authorities added for the current account and Region.",
                "operationId": "ListWebsiteCertificateAuthorities",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "NextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "NextToken": {
                                            "description": "The pagination token used to retrieve the next page of results for this operation. If there are no more pages, this value is null.",
                                            "maxLength": 4096,
                                            "minLength": 1,
                                            "pattern": "[\\w\\-]+",
                                            "type": "string"
                                        },
                                        "WebsiteCertificateAuthorities": {
                                            "description": "Information about the certificates.",
                                            "items": {
                                                "description": "The summary of the certificate authority (CA).",
                                                "properties": {
                                                    "CreatedTime": {
                                                        "description": "The time when the CA was added.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "DisplayName": {
                                                        "description": "The name to display.",
                                                        "maxLength": 100,
                                                        "type": "string"
                                                    },
                                                    "WebsiteCaId": {
                                                        "description": "A unique identifier for the CA.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "UnauthorizedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "TooManyRequestsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "FleetArn": {
                                        "description": "The ARN of the fleet.",
                                        "maxLength": 2048,
                                        "minLength": 20,
                                        "type": "string"
                                    },
                                    "MaxResults": {
                                        "description": "The maximum number of results to be included in the next page.",
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "The pagination token used to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.",
                                        "maxLength": 4096,
                                        "minLength": 1,
                                        "pattern": "[\\w\\-]+",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "FleetArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/signOutUser": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Signs the user out from all of their devices. The user can sign in again if they have valid credentials.",
                "operationId": "SignOutUser",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "UnauthorizedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "TooManyRequestsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "FleetArn": {
                                        "description": "The ARN of the fleet.",
                                        "maxLength": 2048,
                                        "minLength": 20,
                                        "type": "string"
                                    },
                                    "Username": {
                                        "description": "The name of the user.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "FleetArn",
                                    "Username"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/updateAuditStreamConfiguration": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Updates the audit stream configuration for the fleet.",
                "operationId": "UpdateAuditStreamConfiguration",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "UnauthorizedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "TooManyRequestsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "AuditStreamArn": {
                                        "description": "The ARN of the Amazon Kinesis data stream that receives the audit events.",
                                        "type": "string"
                                    },
                                    "FleetArn": {
                                        "description": "The ARN of the fleet.",
                                        "maxLength": 2048,
                                        "minLength": 20,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "FleetArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/updateCompanyNetworkConfiguration": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Updates the company network configuration for the fleet.",
                "operationId": "UpdateCompanyNetworkConfiguration",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "UnauthorizedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "TooManyRequestsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "FleetArn": {
                                        "description": "The ARN of the fleet.",
                                        "maxLength": 2048,
                                        "minLength": 20,
                                        "type": "string"
                                    },
                                    "SecurityGroupIds": {
                                        "description": "The security groups associated with access to the provided subnets.",
                                        "items": {
                                            "pattern": "^sg-([0-9a-f]{8}|[0-9a-f]{17})$",
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "SubnetIds": {
                                        "description": "The subnets used for X-ENI connections from Amazon WorkLink rendering containers.",
                                        "items": {
                                            "pattern": "^subnet-([0-9a-f]{8}|[0-9a-f]{17})$",
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "VpcId": {
                                        "description": "The VPC with connectivity to associated websites.",
                                        "pattern": "^vpc-([0-9a-f]{8}|[0-9a-f]{17})$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "FleetArn",
                                    "VpcId",
                                    "SubnetIds",
                                    "SecurityGroupIds"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/updateDevicePolicyConfiguration": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Updates the device policy configuration for the fleet.",
                "operationId": "UpdateDevicePolicyConfiguration",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "UnauthorizedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "TooManyRequestsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "DeviceCaCertificate": {
                                        "description": "The certificate chain, including intermediate certificates and the root certificate authority certificate used to issue device certificates.",
                                        "maxLength": 32768,
                                        "minLength": 1,
                                        "pattern": "(-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}\\u000D?\\u000A)*-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}(\\u000D?\\u000A)?",
                                        "type": "string"
                                    },
                                    "FleetArn": {
                                        "description": "The ARN of the fleet.",
                                        "maxLength": 2048,
                                        "minLength": 20,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "FleetArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/updateIdentityProviderConfiguration": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Updates the identity provider configuration for the fleet.",
                "operationId": "UpdateIdentityProviderConfiguration",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "UnauthorizedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "TooManyRequestsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "FleetArn": {
                                        "description": "The ARN of the fleet.",
                                        "maxLength": 2048,
                                        "minLength": 20,
                                        "type": "string"
                                    },
                                    "IdentityProviderSamlMetadata": {
                                        "description": "The SAML metadata document provided by the customer’s identity provider. The existing IdentityProviderSamlMetadata is unset if null is passed.",
                                        "maxLength": 204800,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "IdentityProviderType": {
                                        "description": "The type of identity provider.",
                                        "enum": [
                                            "SAML"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "FleetArn",
                                    "IdentityProviderType"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AssociateWebsiteCertificateAuthorityRequest": {
                "properties": {
                    "Certificate": {
                        "description": "The root certificate of the CA.",
                        "maxLength": 8192,
                        "minLength": 1,
                        "pattern": "-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}(\\u000D?\\u000A)?",
                        "type": "string"
                    },
                    "DisplayName": {
                        "description": "The certificate name to display.",
                        "maxLength": 100,
                        "type": "string"
                    },
                    "FleetArn": {
                        "description": "The ARN of the fleet.",
                        "maxLength": 2048,
                        "minLength": 20,
                        "type": "string"
                    }
                },
                "required": [
                    "FleetArn",
                    "Certificate"
                ],
                "type": "object"
            },
            "AssociateWebsiteCertificateAuthorityResponse": {
                "properties": {
                    "WebsiteCaId": {
                        "description": "A unique identifier for the CA.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AuditStreamArn": {
                "type": "string"
            },
            "Boolean": {
                "type": "boolean"
            },
            "Certificate": {
                "maxLength": 8192,
                "minLength": 1,
                "pattern": "-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}(\\u000D?\\u000A)?",
                "type": "string"
            },
            "CertificateChain": {
                "maxLength": 32768,
                "minLength": 1,
                "pattern": "(-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}\\u000D?\\u000A)*-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}(\\u000D?\\u000A)?",
                "type": "string"
            },
            "CompanyCode": {
                "maxLength": 32,
                "minLength": 1,
                "type": "string"
            },
            "CreateFleetRequest": {
                "properties": {
                    "DisplayName": {
                        "description": "The fleet name to display.",
                        "maxLength": 100,
                        "type": "string"
                    },
                    "FleetName": {
                        "description": "A unique name for the fleet.",
                        "maxLength": 48,
                        "minLength": 1,
                        "pattern": "^[a-z0-9](?:[a-z0-9\\-]{0,46}[a-z0-9])?$",
                        "type": "string"
                    },
                    "OptimizeForEndUserLocation": {
                        "description": "The option to optimize for better performance by routing traffic through the closest AWS Region to users, which may be outside of your home Region.",
                        "type": "boolean"
                    }
                },
                "required": [
                    "FleetName"
                ],
                "type": "object"
            },
            "CreateFleetResponse": {
                "properties": {
                    "FleetArn": {
                        "description": "The ARN of the fleet.",
                        "maxLength": 2048,
                        "minLength": 20,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DateTime": {
                "format": "date-time",
                "type": "string"
            },
            "DeleteFleetRequest": {
                "properties": {
                    "FleetArn": {
                        "description": "The ARN of the fleet.",
                        "maxLength": 2048,
                        "minLength": 20,
                        "type": "string"
                    }
                },
                "required": [
                    "FleetArn"
                ],
                "type": "object"
            },
            "DeleteFleetResponse": {
                "properties": {},
                "type": "object"
            },
            "DescribeAuditStreamConfigurationRequest": {
                "properties": {
                    "FleetArn": {
                        "description": "The ARN of the fleet.",
                        "maxLength": 2048,
                        "minLength": 20,
                        "type": "string"
                    }
                },
                "required": [
                    "FleetArn"
                ],
                "type": "object"
            },
            "DescribeAuditStreamConfigurationResponse": {
                "properties": {
                    "AuditStreamArn": {
                        "description": "The ARN of the Amazon Kinesis data stream that will receive the audit events.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeCompanyNetworkConfigurationRequest": {
                "properties": {
                    "FleetArn": {
                        "description": "The ARN of the fleet.",
                        "maxLength": 2048,
                        "minLength": 20,
                        "type": "string"
                    }
                },
                "required": [
                    "FleetArn"
                ],
                "type": "object"
            },
            "DescribeCompanyNetworkConfigurationResponse": {
                "properties": {
                    "SecurityGroupIds": {
                        "description": "The security groups associated with access to the provided subnets.",
                        "items": {
                            "pattern": "^sg-([0-9a-f]{8}|[0-9a-f]{17})$",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "SubnetIds": {
                        "description": "The subnets used for X-ENI connections from Amazon WorkLink rendering containers.",
                        "items": {
                            "pattern": "^subnet-([0-9a-f]{8}|[0-9a-f]{17})$",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "VpcId": {
                        "description": "The VPC with connectivity to associated websites.",
                        "pattern": "^vpc-([0-9a-f]{8}|[0-9a-f]{17})$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeDevicePolicyConfigurationRequest": {
                "properties": {
                    "FleetArn": {
                        "description": "The ARN of the fleet.",
                        "maxLength": 2048,
                        "minLength": 20,
                        "type": "string"
                    }
                },
                "required": [
                    "FleetArn"
                ],
                "type": "object"
            },
            "DescribeDevicePolicyConfigurationResponse": {
                "properties": {
                    "DeviceCaCertificate": {
                        "description": "The certificate chain, including intermediate certificates and the root certificate authority certificate used to issue device certificates.",
                        "maxLength": 8192,
                        "minLength": 1,
                        "pattern": "-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}(\\u000D?\\u000A)?",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeDeviceRequest": {
                "properties": {
                    "DeviceId": {
                        "description": "A unique identifier for a registered user's device.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "FleetArn": {
                        "description": "The ARN of the fleet.",
                        "maxLength": 2048,
                        "minLength": 20,
                        "type": "string"
                    }
                },
                "required": [
                    "FleetArn",
                    "DeviceId"
                ],
                "type": "object"
            },
            "DescribeDeviceResponse": {
                "properties": {
                    "FirstAccessedTime": {
                        "description": "The date that the device first signed in to Amazon WorkLink.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "LastAccessedTime": {
                        "description": "The date that the device last accessed Amazon WorkLink.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "Manufacturer": {
                        "description": "The manufacturer of the device.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Model": {
                        "description": "The model of the device.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "OperatingSystem": {
                        "description": "The operating system of the device.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "OperatingSystemVersion": {
                        "description": "The operating system version of the device.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "PatchLevel": {
                        "description": "The operating system patch level of the device.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Status": {
                        "description": "The current state of the device.",
                        "enum": [
                            "ACTIVE",
                            "SIGNED_OUT"
                        ],
                        "type": "string"
                    },
                    "Username": {
                        "description": "The user name associated with the device.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeFleetMetadataRequest": {
                "properties": {
                    "FleetArn": {
                        "description": "The ARN of the fleet.",
                        "maxLength": 2048,
                        "minLength": 20,
                        "type": "string"
                    }
                },
                "required": [
                    "FleetArn"
                ],
                "type": "object"
            },
            "DescribeFleetMetadataResponse": {
                "properties": {
                    "CompanyCode": {
                        "description": "The identifier used by users to sign in to the Amazon WorkLink app.",
                        "maxLength": 32,
                        "minLength": 1,
                        "type": "string"
                    },
                    "CreatedTime": {
                        "description": "The time that the fleet was created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "DisplayName": {
                        "description": "The name to display.",
                        "maxLength": 100,
                        "type": "string"
                    },
                    "FleetName": {
                        "description": "The name of the fleet.",
                        "maxLength": 48,
                        "minLength": 1,
                        "pattern": "^[a-z0-9](?:[a-z0-9\\-]{0,46}[a-z0-9])?$",
                        "type": "string"
                    },
                    "FleetStatus": {
                        "description": "The current state of the fleet.",
                        "enum": [
                            "CREATING",
                            "ACTIVE",
                            "DELETING",
                            "DELETED",
                            "FAILED_TO_CREATE",
                            "FAILED_TO_DELETE"
                        ],
                        "type": "string"
                    },
                    "LastUpdatedTime": {
                        "description": "The time that the fleet was last updated.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "OptimizeForEndUserLocation": {
                        "description": "The option to optimize for better performance by routing traffic through the closest AWS Region to users, which may be outside of your home Region.",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "DescribeIdentityProviderConfigurationRequest": {
                "properties": {
                    "FleetArn": {
                        "description": "The ARN of the fleet.",
                        "maxLength": 2048,
                        "minLength": 20,
                        "type": "string"
                    }
                },
                "required": [
                    "FleetArn"
                ],
                "type": "object"
            },
            "DescribeIdentityProviderConfigurationResponse": {
                "properties": {
                    "IdentityProviderSamlMetadata": {
                        "description": "The SAML metadata document provided by the user’s identity provider.",
                        "maxLength": 204800,
                        "minLength": 1,
                        "type": "string"
                    },
                    "IdentityProviderType": {
                        "description": "The type of identity provider.",
                        "enum": [
                            "SAML"
                        ],
                        "type": "string"
                    },
                    "ServiceProviderSamlMetadata": {
                        "description": "The SAML metadata document uploaded to the user’s identity provider.",
                        "maxLength": 204800,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeWebsiteCertificateAuthorityRequest": {
                "properties": {
                    "FleetArn": {
                        "description": "The ARN of the fleet.",
                        "maxLength": 2048,
                        "minLength": 20,
                        "type": "string"
                    },
                    "WebsiteCaId": {
                        "description": "A unique identifier for the certificate authority.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "FleetArn",
                    "WebsiteCaId"
                ],
                "type": "object"
            },
            "DescribeWebsiteCertificateAuthorityResponse": {
                "properties": {
                    "Certificate": {
                        "description": "The root certificate of the certificate authority.",
                        "maxLength": 8192,
                        "minLength": 1,
                        "pattern": "-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}(\\u000D?\\u000A)?",
                        "type": "string"
                    },
                    "CreatedTime": {
                        "description": "The time that the certificate authority was added.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "DisplayName": {
                        "description": "The certificate name to display.",
                        "maxLength": 100,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DeviceManufacturer": {
                "maxLength": 256,
                "minLength": 1,
                "type": "string"
            },
            "DeviceModel": {
                "maxLength": 256,
                "minLength": 1,
                "type": "string"
            },
            "DeviceOperatingSystemName": {
                "maxLength": 256,
                "minLength": 1,
                "type": "string"
            },
            "DeviceOperatingSystemVersion": {
                "maxLength": 256,
                "minLength": 1,
                "type": "string"
            },
            "DevicePatchLevel": {
                "maxLength": 256,
                "minLength": 1,
                "type": "string"
            },
            "DeviceStatus": {
                "enum": [
                    "ACTIVE",
                    "SIGNED_OUT"
                ],
                "type": "string"
            },
            "DeviceSummary": {
                "description": "The summary of devices.",
                "properties": {
                    "DeviceId": {
                        "description": "The ID of the device.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "DeviceStatus": {
                        "description": "The status of the device.",
                        "enum": [
                            "ACTIVE",
                            "SIGNED_OUT"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DeviceSummaryList": {
                "items": {
                    "description": "The summary of devices.",
                    "properties": {
                        "DeviceId": {
                            "description": "The ID of the device.",
                            "maxLength": 256,
                            "minLength": 1,
                            "type": "string"
                        },
                        "DeviceStatus": {
                            "description": "The status of the device.",
                            "enum": [
                                "ACTIVE",
                                "SIGNED_OUT"
                            ],
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "DisassociateWebsiteCertificateAuthorityRequest": {
                "properties": {
                    "FleetArn": {
                        "description": "The ARN of the fleet.",
                        "maxLength": 2048,
                        "minLength": 20,
                        "type": "string"
                    },
                    "WebsiteCaId": {
                        "description": "A unique identifier for the CA.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "FleetArn",
                    "WebsiteCaId"
                ],
                "type": "object"
            },
            "DisassociateWebsiteCertificateAuthorityResponse": {
                "properties": {},
                "type": "object"
            },
            "DisplayName": {
                "maxLength": 100,
                "type": "string"
            },
            "FleetArn": {
                "maxLength": 2048,
                "minLength": 20,
                "type": "string"
            },
            "FleetName": {
                "maxLength": 48,
                "minLength": 1,
                "pattern": "^[a-z0-9](?:[a-z0-9\\-]{0,46}[a-z0-9])?$",
                "type": "string"
            },
            "FleetStatus": {
                "enum": [
                    "CREATING",
                    "ACTIVE",
                    "DELETING",
                    "DELETED",
                    "FAILED_TO_CREATE",
                    "FAILED_TO_DELETE"
                ],
                "type": "string"
            },
            "FleetSummary": {
                "description": "The summary of the fleet.",
                "properties": {
                    "CompanyCode": {
                        "description": "The identifier used by users to sign into the Amazon WorkLink app.",
                        "maxLength": 32,
                        "minLength": 1,
                        "type": "string"
                    },
                    "CreatedTime": {
                        "description": "The time when the fleet was created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "DisplayName": {
                        "description": "The name to display.",
                        "maxLength": 100,
                        "type": "string"
                    },
                    "FleetArn": {
                        "description": "The ARN of the fleet.",
                        "maxLength": 2048,
                        "minLength": 20,
                        "type": "string"
                    },
                    "FleetName": {
                        "description": "The name of the fleet.",
                        "maxLength": 48,
                        "minLength": 1,
                        "pattern": "^[a-z0-9](?:[a-z0-9\\-]{0,46}[a-z0-9])?$",
                        "type": "string"
                    },
                    "FleetStatus": {
                        "description": "The status of the fleet.",
                        "enum": [
                            "CREATING",
                            "ACTIVE",
                            "DELETING",
                            "DELETED",
                            "FAILED_TO_CREATE",
                            "FAILED_TO_DELETE"
                        ],
                        "type": "string"
                    },
                    "LastUpdatedTime": {
                        "description": "The time when the fleet was last updated.",
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "FleetSummaryList": {
                "items": {
                    "description": "The summary of the fleet.",
                    "properties": {
                        "CompanyCode": {
                            "description": "The identifier used by users to sign into the Amazon WorkLink app.",
                            "maxLength": 32,
                            "minLength": 1,
                            "type": "string"
                        },
                        "CreatedTime": {
                            "description": "The time when the fleet was created.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "DisplayName": {
                            "description": "The name to display.",
                            "maxLength": 100,
                            "type": "string"
                        },
                        "FleetArn": {
                            "description": "The ARN of the fleet.",
                            "maxLength": 2048,
                            "minLength": 20,
                            "type": "string"
                        },
                        "FleetName": {
                            "description": "The name of the fleet.",
                            "maxLength": 48,
                            "minLength": 1,
                            "pattern": "^[a-z0-9](?:[a-z0-9\\-]{0,46}[a-z0-9])?$",
                            "type": "string"
                        },
                        "FleetStatus": {
                            "description": "The status of the fleet.",
                            "enum": [
                                "CREATING",
                                "ACTIVE",
                                "DELETING",
                                "DELETED",
                                "FAILED_TO_CREATE",
                                "FAILED_TO_DELETE"
                            ],
                            "type": "string"
                        },
                        "LastUpdatedTime": {
                            "description": "The time when the fleet was last updated.",
                            "format": "date-time",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "Id": {
                "maxLength": 256,
                "minLength": 1,
                "type": "string"
            },
            "IdentityProviderType": {
                "enum": [
                    "SAML"
                ],
                "type": "string"
            },
            "InternalServerErrorException": {},
            "InvalidRequestException": {},
            "ListDevicesRequest": {
                "properties": {
                    "FleetArn": {
                        "description": "The ARN of the fleet.",
                        "maxLength": 2048,
                        "minLength": 20,
                        "type": "string"
                    },
                    "MaxResults": {
                        "description": "The maximum number of results to be included in the next page.",
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "The pagination token used to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.",
                        "maxLength": 4096,
                        "minLength": 1,
                        "pattern": "[\\w\\-]+",
                        "type": "string"
                    }
                },
                "required": [
                    "FleetArn"
                ],
                "type": "object"
            },
            "ListDevicesResponse": {
                "properties": {
                    "Devices": {
                        "description": "Information about the devices.",
                        "items": {
                            "description": "The summary of devices.",
                            "properties": {
                                "DeviceId": {
                                    "description": "The ID of the device.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "DeviceStatus": {
                                    "description": "The status of the device.",
                                    "enum": [
                                        "ACTIVE",
                                        "SIGNED_OUT"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "NextToken": {
                        "description": "The pagination token used to retrieve the next page of results for this operation. If there are no more pages, this value is null.",
                        "maxLength": 4096,
                        "minLength": 1,
                        "pattern": "[\\w\\-]+",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListFleetsRequest": {
                "properties": {
                    "MaxResults": {
                        "description": "The maximum number of results to be included in the next page.",
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "The pagination token used to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.",
                        "maxLength": 4096,
                        "minLength": 1,
                        "pattern": "[\\w\\-]+",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListFleetsResponse": {
                "properties": {
                    "FleetSummaryList": {
                        "description": "The summary list of the fleets.",
                        "items": {
                            "description": "The summary of the fleet.",
                            "properties": {
                                "CompanyCode": {
                                    "description": "The identifier used by users to sign into the Amazon WorkLink app.",
                                    "maxLength": 32,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "CreatedTime": {
                                    "description": "The time when the fleet was created.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "DisplayName": {
                                    "description": "The name to display.",
                                    "maxLength": 100,
                                    "type": "string"
                                },
                                "FleetArn": {
                                    "description": "The ARN of the fleet.",
                                    "maxLength": 2048,
                                    "minLength": 20,
                                    "type": "string"
                                },
                                "FleetName": {
                                    "description": "The name of the fleet.",
                                    "maxLength": 48,
                                    "minLength": 1,
                                    "pattern": "^[a-z0-9](?:[a-z0-9\\-]{0,46}[a-z0-9])?$",
                                    "type": "string"
                                },
                                "FleetStatus": {
                                    "description": "The status of the fleet.",
                                    "enum": [
                                        "CREATING",
                                        "ACTIVE",
                                        "DELETING",
                                        "DELETED",
                                        "FAILED_TO_CREATE",
                                        "FAILED_TO_DELETE"
                                    ],
                                    "type": "string"
                                },
                                "LastUpdatedTime": {
                                    "description": "The time when the fleet was last updated.",
                                    "format": "date-time",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "NextToken": {
                        "description": "The pagination token used to retrieve the next page of results for this operation. If there are no more pages, this value is null.",
                        "maxLength": 4096,
                        "minLength": 1,
                        "pattern": "[\\w\\-]+",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListWebsiteCertificateAuthoritiesRequest": {
                "properties": {
                    "FleetArn": {
                        "description": "The ARN of the fleet.",
                        "maxLength": 2048,
                        "minLength": 20,
                        "type": "string"
                    },
                    "MaxResults": {
                        "description": "The maximum number of results to be included in the next page.",
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "The pagination token used to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.",
                        "maxLength": 4096,
                        "minLength": 1,
                        "pattern": "[\\w\\-]+",
                        "type": "string"
                    }
                },
                "required": [
                    "FleetArn"
                ],
                "type": "object"
            },
            "ListWebsiteCertificateAuthoritiesResponse": {
                "properties": {
                    "NextToken": {
                        "description": "The pagination token used to retrieve the next page of results for this operation. If there are no more pages, this value is null.",
                        "maxLength": 4096,
                        "minLength": 1,
                        "pattern": "[\\w\\-]+",
                        "type": "string"
                    },
                    "WebsiteCertificateAuthorities": {
                        "description": "Information about the certificates.",
                        "items": {
                            "description": "The summary of the certificate authority (CA).",
                            "properties": {
                                "CreatedTime": {
                                    "description": "The time when the CA was added.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "DisplayName": {
                                    "description": "The name to display.",
                                    "maxLength": 100,
                                    "type": "string"
                                },
                                "WebsiteCaId": {
                                    "description": "A unique identifier for the CA.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "MaxResults": {
                "minimum": 1,
                "type": "integer"
            },
            "NextToken": {
                "maxLength": 4096,
                "minLength": 1,
                "pattern": "[\\w\\-]+",
                "type": "string"
            },
            "ResourceAlreadyExistsException": {},
            "ResourceNotFoundException": {},
            "SamlMetadata": {
                "maxLength": 204800,
                "minLength": 1,
                "type": "string"
            },
            "SecurityGroupId": {
                "pattern": "^sg-([0-9a-f]{8}|[0-9a-f]{17})$",
                "type": "string"
            },
            "SecurityGroupIds": {
                "items": {
                    "pattern": "^sg-([0-9a-f]{8}|[0-9a-f]{17})$",
                    "type": "string"
                },
                "type": "array"
            },
            "SignOutUserRequest": {
                "properties": {
                    "FleetArn": {
                        "description": "The ARN of the fleet.",
                        "maxLength": 2048,
                        "minLength": 20,
                        "type": "string"
                    },
                    "Username": {
                        "description": "The name of the user.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "FleetArn",
                    "Username"
                ],
                "type": "object"
            },
            "SignOutUserResponse": {
                "properties": {},
                "type": "object"
            },
            "SubnetId": {
                "pattern": "^subnet-([0-9a-f]{8}|[0-9a-f]{17})$",
                "type": "string"
            },
            "SubnetIds": {
                "items": {
                    "pattern": "^subnet-([0-9a-f]{8}|[0-9a-f]{17})$",
                    "type": "string"
                },
                "type": "array"
            },
            "TooManyRequestsException": {},
            "UnauthorizedException": {},
            "UpdateAuditStreamConfigurationRequest": {
                "properties": {
                    "AuditStreamArn": {
                        "description": "The ARN of the Amazon Kinesis data stream that receives the audit events.",
                        "type": "string"
                    },
                    "FleetArn": {
                        "description": "The ARN of the fleet.",
                        "maxLength": 2048,
                        "minLength": 20,
                        "type": "string"
                    }
                },
                "required": [
                    "FleetArn"
                ],
                "type": "object"
            },
            "UpdateAuditStreamConfigurationResponse": {
                "properties": {},
                "type": "object"
            },
            "UpdateCompanyNetworkConfigurationRequest": {
                "properties": {
                    "FleetArn": {
                        "description": "The ARN of the fleet.",
                        "maxLength": 2048,
                        "minLength": 20,
                        "type": "string"
                    },
                    "SecurityGroupIds": {
                        "description": "The security groups associated with access to the provided subnets.",
                        "items": {
                            "pattern": "^sg-([0-9a-f]{8}|[0-9a-f]{17})$",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "SubnetIds": {
                        "description": "The subnets used for X-ENI connections from Amazon WorkLink rendering containers.",
                        "items": {
                            "pattern": "^subnet-([0-9a-f]{8}|[0-9a-f]{17})$",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "VpcId": {
                        "description": "The VPC with connectivity to associated websites.",
                        "pattern": "^vpc-([0-9a-f]{8}|[0-9a-f]{17})$",
                        "type": "string"
                    }
                },
                "required": [
                    "FleetArn",
                    "VpcId",
                    "SubnetIds",
                    "SecurityGroupIds"
                ],
                "type": "object"
            },
            "UpdateCompanyNetworkConfigurationResponse": {
                "properties": {},
                "type": "object"
            },
            "UpdateDevicePolicyConfigurationRequest": {
                "properties": {
                    "DeviceCaCertificate": {
                        "description": "The certificate chain, including intermediate certificates and the root certificate authority certificate used to issue device certificates.",
                        "maxLength": 32768,
                        "minLength": 1,
                        "pattern": "(-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}\\u000D?\\u000A)*-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}(\\u000D?\\u000A)?",
                        "type": "string"
                    },
                    "FleetArn": {
                        "description": "The ARN of the fleet.",
                        "maxLength": 2048,
                        "minLength": 20,
                        "type": "string"
                    }
                },
                "required": [
                    "FleetArn"
                ],
                "type": "object"
            },
            "UpdateDevicePolicyConfigurationResponse": {
                "properties": {},
                "type": "object"
            },
            "UpdateFleetMetadataRequest": {
                "properties": {
                    "DisplayName": {
                        "description": "The fleet name to display. The existing DisplayName is unset if null is passed.",
                        "maxLength": 100,
                        "type": "string"
                    },
                    "FleetArn": {
                        "description": "The ARN of the fleet.",
                        "maxLength": 2048,
                        "minLength": 20,
                        "type": "string"
                    },
                    "OptimizeForEndUserLocation": {
                        "description": "The option to optimize for better performance by routing traffic through the closest AWS Region to users, which may be outside of your home Region.",
                        "type": "boolean"
                    }
                },
                "required": [
                    "FleetArn"
                ],
                "type": "object"
            },
            "UpdateFleetMetadataResponse": {
                "properties": {},
                "type": "object"
            },
            "UpdateIdentityProviderConfigurationRequest": {
                "properties": {
                    "FleetArn": {
                        "description": "The ARN of the fleet.",
                        "maxLength": 2048,
                        "minLength": 20,
                        "type": "string"
                    },
                    "IdentityProviderSamlMetadata": {
                        "description": "The SAML metadata document provided by the customer’s identity provider. The existing IdentityProviderSamlMetadata is unset if null is passed.",
                        "maxLength": 204800,
                        "minLength": 1,
                        "type": "string"
                    },
                    "IdentityProviderType": {
                        "description": "The type of identity provider.",
                        "enum": [
                            "SAML"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "FleetArn",
                    "IdentityProviderType"
                ],
                "type": "object"
            },
            "UpdateIdentityProviderConfigurationResponse": {
                "properties": {},
                "type": "object"
            },
            "Username": {
                "maxLength": 256,
                "minLength": 1,
                "type": "string"
            },
            "VpcId": {
                "pattern": "^vpc-([0-9a-f]{8}|[0-9a-f]{17})$",
                "type": "string"
            },
            "WebsiteCaSummary": {
                "description": "The summary of the certificate authority (CA).",
                "properties": {
                    "CreatedTime": {
                        "description": "The time when the CA was added.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "DisplayName": {
                        "description": "The name to display.",
                        "maxLength": 100,
                        "type": "string"
                    },
                    "WebsiteCaId": {
                        "description": "A unique identifier for the CA.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "WebsiteCaSummaryList": {
                "items": {
                    "description": "The summary of the certificate authority (CA).",
                    "properties": {
                        "CreatedTime": {
                            "description": "The time when the CA was added.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "DisplayName": {
                            "description": "The name to display.",
                            "maxLength": 100,
                            "type": "string"
                        },
                        "WebsiteCaId": {
                            "description": "A unique identifier for the CA.",
                            "maxLength": 256,
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            }
        },
        "parameters": {
            "Action": {
                "in": "query",
                "name": "Action",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "Version": {
                "in": "query",
                "name": "Version",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Algorithm": {
                "in": "header",
                "name": "X-Amz-Algorithm",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Content-Sha256": {
                "in": "header",
                "name": "X-Amz-Content-Sha256",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Credential": {
                "in": "header",
                "name": "X-Amz-Credential",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Date": {
                "in": "header",
                "name": "X-Amz-Date",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Security-Token": {
                "in": "header",
                "name": "X-Amz-Security-Token",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Signature": {
                "in": "header",
                "name": "X-Amz-Signature",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-SignedHeaders": {
                "in": "header",
                "name": "X-Amz-SignedHeaders",
                "required": false,
                "schema": {
                    "type": "string"
                }
            }
        },
        "requestBodies": {
            "DeleteFleetBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "FleetArn": {
                                    "description": "The ARN of the fleet.",
                                    "maxLength": 2048,
                                    "minLength": 20,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "FleetArn"
                            ],
                            "type": "object"
                        }
                    }
                },
                "required": true
            },
            "ListDevicesBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "FleetArn": {
                                    "description": "The ARN of the fleet.",
                                    "maxLength": 2048,
                                    "minLength": 20,
                                    "type": "string"
                                },
                                "MaxResults": {
                                    "description": "The maximum number of results to be included in the next page.",
                                    "minimum": 1,
                                    "type": "integer"
                                },
                                "NextToken": {
                                    "description": "The pagination token used to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.",
                                    "maxLength": 4096,
                                    "minLength": 1,
                                    "pattern": "[\\w\\-]+",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "FleetArn"
                            ],
                            "type": "object"
                        }
                    }
                },
                "required": true
            }
        },
        "securitySchemes": {
            "hmac": {
                "description": "Amazon Signature authorization v4",
                "in": "header",
                "name": "Authorization",
                "type": "apiKey",
                "x-amazon-apigateway-authtype": "awsSigv4"
            }
        }
    }
}